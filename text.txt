1. Пользователь запускает клиент
2. Клиент запрашивает подключение к серверу по указанному адресу/порту
3. В случае успешного подключения, клиент запрашивает у пользователя логин/пароль

Возможно 3 типа запроса LOGOUT, ONLINE, SEND, SIGN_UP, SIGN_IN.
4. Клиент формирует запрос на сервер и получает ответ. Пользователь может иметь одно из трех состояний (не существует, оффлайн, онлайн)
- В случае, если пользака не существует (должен быть тип SIGN_UP), получаем ответ со статусом OK "Successfully signed up"

- В случае, если пользак существует, но имеет состояние оффлайн, запрос должен быть SIGN_IN,
при неверном пароле получаем "wrong password" и закрытие сокета.

- В случае, если пользак существует, но имеет состояние оффлайн, запрос должен быть SIGN_IN, иначе "bad request" и закрытие сокета.

- В случае, если пользак существует, но имеет состояние оффлайн, при успешном запросе сервер устанавливает нам статус онлайн,
статус ответа ОК, сообщение "Successfully logged in" и передает количество онлайн пользователей

- В случае, если пользак сущетствует и имеет состояние онлайн, валидно только три типа запроса:

--LOGOUT, пользователю устанавливается статус оффлайн, приходит ответ со статусом CLOSED и сообщением "Close the connection"

--SEND, статус OK, сообщение отправившего пользователя

--ONLINE, статус ОК, сообщение с количеством онлайн пользователей.

5. В зависимости от полученного ответа, возможны дальнейшие сценарии:

- при статусах ERROR:

-- возможен у авторизованного пользователя со статусом онлайн, если запрос не содержит ONLINE, LOGOUT, SEND -> обработка исключения

- при статусах CLOSE:

-- возможен у оффлайн пользователя, при неверно введенном пароле. -> запрос повторяется с повторным вводом логин/пароль

-- возможен у оффлайн пользователя, при переданном запросе != SING_IN

-- возможен у онлайн пользователя, при неверно переданном пароле. -> соединение закрывается malware

-- возможен у онлайн пользователя, при переданном запросе LOGOUT -> приложение останавливает работу.

- при статусах OK:

-- возможен у нового пользователя, в случае успешной регистарции. -> возможность отправлять запросы с типами: LOGOUT, SEND, ONLINE

-- возможен у оффлайн пользователя, в случае успещной аутентификации -> возможность отправлять запросы с типами: LOGOUT, SEND, ONLINE

-- возможен у аутентифицированного онлайн пользователя при запросах SEND, ONLINE -> обрабатываем входящие ответы

